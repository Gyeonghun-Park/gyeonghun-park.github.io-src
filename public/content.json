{"pages":[{"title":"about","text":"","link":"/about/index.html"}],"posts":[{"title":"Leetcode) 125. Valid Palindrome","text":"문제 주어진 문자열이 팰린드롬인지 확인하라. 대소문자를 구분하지 않으며, 영문자와 숫자만을 대상으로 한다. 예제 제약 풀이Regular expression (정규 표현식)을 사용해 불피요한 문자를 제거하고, Slicing [::-1]을 이용하여문자열을 뒤집었다. 123456def isPalindrome(self, s: str) -&gt; bool: s = s.lower() # 정규식으로 불필요한 문자 필터링 s = re.sub('[^a-z0-9]', '', s) return s == s[::-1]","link":"/2021/10/15/Leetcode-125-Valid-Palindrome/"},{"title":"SQL) JOIN이란?","text":"조인의 종류 JOIN2개 이상의 테이블에 있는 정보 중 사용자가 필요한 집합에 맞게 가상의 테이블처럼 만들어서 결과를 보여주는 것이다. 종류 설명 INNER JOIN 특정 컬럼을 기준으로 정확히 매칭된 집합을 출력한다. OUTER JOIN 특정 컬럼을 기준으로 매칭된 집합을 출력하지만 한쪽의 집합은 모두 출력하고 다른 한쪽의 집합은 매칭되는 컬럼의 값 만을 출력한다. SELF JOIN 동일한 테이블 끼리 의 특정 컬럼을 기준으로 매칭되는 집합을 출력한다. SEFULL JOIN INNER, LEFT OUTER, RIGHT OUTER 조인 집합을 모두 출력한다. FULL OUTER JOIN INNER, LEFT OUTER, RIGHT OUTER 조인 집합을 모두 출력한다. CROSS JOIN Cartesian Product이라고도 하며 조인되는 두 테이블에서 곱집합을 반환한다. NATURAL JOIN 특정 테이블의 같은 이름을 가진 컬럼 간의 조인집합을 출력한다. 각 JOIN들의 결과를 보기위해 예제용 테이블과 데이터들을 만들어보자. 연습용 테이블12345678910CREATE TABLE BASKET_A( ID INT PRIMARY KEY , FRUIT VARCHAR (100) NOT NULL);CREATE TABLE BASKET_B( ID INT PRIMARY KEY , FRUIT VARCHAR (100) NOT NULL); 연습용 데이터123456789101112131415161718INSERT INTO BASKET_A(ID, FRUIT)VALUES(1, 'Apple'),(2, 'Orange'),(3, 'Banana'),(4, 'Cucumber');COMMIT;INSERT INTO BASKET_B(ID, FRUIT)VALUES(1, 'Orange'),(2, 'Apple'),(3, 'Watermelon'),(4, 'Pear');COMMIT; Query112345678SELECT * FROM BASKET_A;--Resultid fruit1 Apple2 Orange3 Banana4 Cucumber Query212345678SELECT * FROM BASKET_A;--Resultid fruit1 Orange2 Apple3 Watermelon4 Pear INNER JOIN INNER JOIN특정 컬럼을 기준으로 정확히 매칭된 집합을 출력한다. INNER JOIN은 대표적인 JOIN의 종류이다. BASKET_A 테이블과 BASKET_B 테이블을 FRUIT 컬럼 기준으로 조인한다. INNER JOIN12345678910111213SELECT A.ID ID_A , A.FRUIT FRUIT_A , B.ID ID_B , B.FRUIT FRUIT_BFROM BASKET_A AINNER JOIN BASKET_B BON A.FRUIT = B.FRUIT;--Resultid_a fruit_a id_b fruit_b1 Apple 2 Apple2 Orange 1 Orange OUTER JOIN OUTER JOIN특정 컬럼을 기준으로 정확히 매칭된 집합을 출력한다. INNER JOIN은 대표적인 JOIN의 종류이다.","link":"/2021/10/14/SQL-JOIN/"}],"tags":[{"name":"Leetcode","slug":"Leetcode","link":"/tags/Leetcode/"},{"name":"Coding Interview","slug":"Coding-Interview","link":"/tags/Coding-Interview/"},{"name":"SQL","slug":"SQL","link":"/tags/SQL/"},{"name":"JOIN","slug":"JOIN","link":"/tags/JOIN/"}],"categories":[{"name":"Coding Interview","slug":"Coding-Interview","link":"/categories/Coding-Interview/"},{"name":"SQL","slug":"SQL","link":"/categories/SQL/"},{"name":"String Manipulation","slug":"Coding-Interview/String-Manipulation","link":"/categories/Coding-Interview/String-Manipulation/"}]}